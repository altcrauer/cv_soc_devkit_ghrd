# +----------------------------------------------------------------------------+
# | License Agreement                                                          |
# |                                                                            |
# | Copyright (c) 1991-2012 Altera Corporation, San Jose, California, USA.     |
# | All rights reserved.                                                       |
# |                                                                            |
# | Any megafunction design, and related net list (encrypted or decrypted),    |
# |  support information, device programming or simulation file, and any other |
# |  associated documentation or information provided by Altera or a partner   |
# |  under Altera's Megafunction Partnership Program may be used only to       |
# |  program PLD devices (but not masked PLD devices) from Altera.  Any other  |
# |  use of such megafunction design, net list, support information, device    |
# |  programming or simulation file, or any other related documentation or     |
# |  information is prohibited for any other purpose, including, but not       |
# |  limited to modification, reverse engineering, de-compiling, or use with   |
# |  any other silicon devices, unless such use is explicitly licensed under   |
# |  a separate agreement with Altera or a megafunction partner.  Title to     |
# |  the intellectual property, including patents, copyrights, trademarks,     |
# |  trade secrets, or maskworks, embodied in any such megafunction design,    |
# |  net list, support information, device programming or simulation file, or  |
# |  any other related documentation or information provided by Altera or a    |
# |  megafunction partner, remains with Altera, the megafunction partner, or   |
# |  their respective licensors.  No other licenses, including any licenses    |
# |  needed under any third party's intellectual property, are provided herein.|
# |  Copying or modifying any file, or portion thereof, to which this notice   |
# |  is attached violates this copyright.                                      |
# |                                                                            |
# | THIS FILE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR    |
# | IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,   |
# | FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL    |
# | THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER |
# | LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING    |
# | FROM, OUT OF OR IN CONNECTION WITH THIS FILE OR THE USE OR OTHER DEALINGS  |
# | IN THIS FILE.                                                              |
# |                                                                            |
# | This agreement shall be governed in all respects by the laws of the State  |
# |  of California and by the laws of the United States of America.            |
# |                                                                            |
# +----------------------------------------------------------------------------+

# TCL File Generated by Altera University Program
# DO NOT MODIFY

# +-----------------------------------
# | module altera_up_avalon_ps2
# | 
set_module_property DESCRIPTION "PS2 controller of the DE-Series boards"
set_module_property NAME altera_up_avalon_ps2
set_module_property VERSION 12.0
set_module_property GROUP "University Program/Generic IO"
set_module_property AUTHOR "Altera University Program"
set_module_property DISPLAY_NAME "PS2 Controller"
set_module_property DATASHEET_URL "doc/PS2_Controller.pdf"
#set_module_property TOP_LEVEL_HDL_FILE altera_up_avalon_ps2.v
#set_module_property TOP_LEVEL_HDL_MODULE altera_up_avalon_ps2
set_module_property INSTANTIATE_IN_SYSTEM_MODULE true
set_module_property EDITABLE false
set_module_property ANALYZE_HDL false
set_module_property ELABORATION_CALLBACK elaborate
set_module_property GENERATION_CALLBACK generate
# | 
# +-----------------------------------

# +-----------------------------------
# | files
# | 
#add_file altera_up_avalon_ps2.v {SYNTHESIS SIMULATION}
add_file "hdl/altera_up_ps2.v" {SYNTHESIS SIMULATION}
add_file "hdl/altera_up_ps2_command_out.v" {SYNTHESIS SIMULATION}
add_file "hdl/altera_up_ps2_data_in.v" {SYNTHESIS SIMULATION}
# | 
# +-----------------------------------

# +-----------------------------------
# | parameters
# | 
add_parameter avalon_bus_type string "Memory Mapped"
set_parameter_property avalon_bus_type DISPLAY_NAME "Avalon Type"
set_parameter_property avalon_bus_type GROUP "Interface Settings"
set_parameter_property avalon_bus_type UNITS None
set_parameter_property avalon_bus_type AFFECTS_ELABORATION true
set_parameter_property avalon_bus_type AFFECTS_GENERATION true
set_parameter_property avalon_bus_type ALLOWED_RANGES {"Memory Mapped" "Streaming"}
set_parameter_property avalon_bus_type VISIBLE true
set_parameter_property avalon_bus_type ENABLED true

add_parameter clk_rate integer 50000000
set_parameter_property clk_rate DISPLAY_NAME "Incoming clock rate"
set_parameter_property clk_rate GROUP "Interface Settings"
set_parameter_property clk_rate UNITS hertz
set_parameter_property clk_rate AFFECTS_ELABORATION true
set_parameter_property clk_rate AFFECTS_GENERATION true
set_parameter_property clk_rate VISIBLE false
set_parameter_property clk_rate ENABLED true
# | 
# +-----------------------------------

# +-----------------------------------
# | connection point clock_reset
# | 
add_interface clock_reset clock end
set_interface_property clock_reset ptfSchematicName ""

add_interface_port clock_reset clk clk Input 1
add_interface_port clock_reset reset reset Input 1
# | 
# +-----------------------------------

# +-----------------------------------
# | Elaboration function
# | 
proc elaborate {} {
	set avalon_bus_type	[ get_parameter_value "avalon_bus_type" ]

	set clk_rate [ get_interface_property clock_reset clockRate ]
	if { $clk_rate <= 0 } {
		set_parameter_property clk_rate VISIBLE true
	} else {
		set_parameter_property clk_rate VISIBLE false
		set_parameter_value "clk_rate" $clk_rate
	}

	if { $avalon_bus_type == "Memory Mapped" } {
		# +-----------------------------------
		# | connection point avalon_ps2_slave
		# | 
		add_interface avalon_ps2_slave avalon end clock_reset
		set_interface_property avalon_ps2_slave addressAlignment DYNAMIC
		set_interface_property avalon_ps2_slave bridgesToMaster ""
		set_interface_property avalon_ps2_slave burstOnBurstBoundariesOnly false
		#set_interface_property avalon_ps2_slave explicitAddressSpan 8
		set_interface_property avalon_ps2_slave holdTime 0
		set_interface_property avalon_ps2_slave isBigEndian  false
		set_interface_property avalon_ps2_slave isFlash false
		set_interface_property avalon_ps2_slave isMemoryDevice false
		set_interface_property avalon_ps2_slave isNonVolatileStorage false
		set_interface_property avalon_ps2_slave linewrapBursts false
		set_interface_property avalon_ps2_slave maximumPendingReadTransactions 0
		set_interface_property avalon_ps2_slave minimumUninterruptedRunLength 1
		set_interface_property avalon_ps2_slave printableDevice false
		set_interface_property avalon_ps2_slave readLatency 1
		set_interface_property avalon_ps2_slave readWaitTime 0
		set_interface_property avalon_ps2_slave setupTime 0
		set_interface_property avalon_ps2_slave timingUnits cycles
		set_interface_property avalon_ps2_slave writeWaitTime 0

		add_interface_port avalon_ps2_slave address address Input 1
		add_interface_port avalon_ps2_slave chipselect chipselect Input 1
		add_interface_port avalon_ps2_slave byteenable byteenable Input 4
		add_interface_port avalon_ps2_slave read read Input 1
		add_interface_port avalon_ps2_slave write write Input 1
		add_interface_port avalon_ps2_slave writedata writedata Input 32
		add_interface_port avalon_ps2_slave readdata readdata Output 32
		add_interface_port avalon_ps2_slave waitrequest waitrequest Output 1
		# | 
		# +-----------------------------------

		# +-----------------------------------
		# | connection point interrupt
		# | 
		add_interface interrupt interrupt end
		set_interface_property interrupt associatedAddressablePoint avalon_ps2_slave

		set_interface_property interrupt ASSOCIATED_CLOCK clock_reset

		add_interface_port interrupt irq irq Output 1
		# | 
		# +-----------------------------------
	} else {
		# +-----------------------------------
		# | connection point avalon_ps2_command_sink
		# | 
		add_interface avalon_ps2_command_sink avalon_streaming end clock_reset
		set_interface_property avalon_ps2_command_sink errorDescriptor ""
		set_interface_property avalon_ps2_command_sink maxChannel 0
		set_interface_property avalon_ps2_command_sink readyLatency 0

		add_interface_port avalon_ps2_command_sink command data Input 8
		add_interface_port avalon_ps2_command_sink command_valid valid Input 1
		add_interface_port avalon_ps2_command_sink command_ready ready Output 1
		# | 
		# +-----------------------------------

		# +-----------------------------------
		# | connection point avalon_ps2_data_source
		# | 
		add_interface avalon_ps2_data_source avalon_streaming start clock_reset
		set_interface_property avalon_ps2_data_source errorDescriptor ""
		set_interface_property avalon_ps2_data_source maxChannel 0
		set_interface_property avalon_ps2_data_source readyLatency 0

		add_interface_port avalon_ps2_data_source data_ready ready Input 1
		add_interface_port avalon_ps2_data_source data data Output 8
		add_interface_port avalon_ps2_data_source data_valid valid Output 1
		# | 
		# +-----------------------------------
	}

	# +-----------------------------------
	# | connection point external_interface
	# | 
	add_interface external_interface conduit end

	add_interface_port external_interface PS2_CLK export Bidir 1
	add_interface_port external_interface PS2_DAT export Bidir 1
	# | 
	# +-----------------------------------
}
# | 
# +-----------------------------------

# +-----------------------------------
# | Generation function
# | 
proc generate {} {
	send_message info "Starting Generation of PS2 Controller"

	# get parameter values
	set avalon_bus_type	[ get_parameter_value "avalon_bus_type" ]
	set clk_rate [ get_parameter_value "clk_rate" ]

	set cc_for_101us	[ format "CLOCK_CYCLES_FOR_101US:%.0f" [ expr $clk_rate * 0.000101 ] ]
	set dw_for_101us	[ format "DATA_WIDTH_FOR_101US:%.0f" [ expr ceil (log($clk_rate * 0.000101) / (log (2))) ] ]
	set cc_for_15ms	[ format "CLOCK_CYCLES_FOR_15MS:%.0f" [ expr $clk_rate * 0.015 ] ]
	set dw_for_15ms	[ format "DATA_WIDTH_FOR_15MS:%.0f" [ expr ceil (log($clk_rate * 0.015) / (log (2))) ] ]
	set cc_for_2ms		[ format "CLOCK_CYCLES_FOR_2MS:%.0f" [ expr $clk_rate * 0.002 ] ]
	set dw_for_2ms		[ format "DATA_WIDTH_FOR_2MS:%.0f" [ expr ceil (log($clk_rate * 0.002) / (log (2))) ] ]

	# set section values

	# set arguments
	set params "$cc_for_101us;$dw_for_101us;$cc_for_15ms;$dw_for_15ms;$cc_for_2ms;$dw_for_2ms"
	set sections ""

	# get generation settings
	set dest_language	[ get_generation_property HDL_LANGUAGE ]
	set dest_dir 		[ get_generation_property OUTPUT_DIRECTORY ]
	set dest_name		[ get_generation_property OUTPUT_NAME ]
	
	set file_ending "v"
	if { $dest_language == "VHDL" || $dest_language == "vhdl" } {
		set file_ending "vhd"
	}

	add_file "$dest_dir$dest_name.$file_ending" {SYNTHESIS SIMULATION}
	# add_file "$dest_dir/altera_up_ps2.$file_ending" SYNTHESIS
	# add_file "$dest_dir/altera_up_ps2_command_out.$file_ending" SYNTHESIS
	# add_file "$dest_dir/altera_up_ps2_data_in.$file_ending" SYNTHESIS

	# Generate HDL
	source "up_ip_generator.tcl"
	if { $avalon_bus_type == "Memory Mapped" } {
		alt_up_generate "$dest_dir$dest_name.$file_ending" "hdl/altera_up_avalon_mm_ps2.$file_ending" "altera_up_avalon_mm_ps2" $dest_name $params $sections
	} else {
		alt_up_generate "$dest_dir$dest_name.$file_ending" "hdl/altera_up_avalon_st_ps2.$file_ending" "altera_up_avalon_st_ps2" $dest_name $params $sections
	}
	# file copy -force "hdl/altera_up_ps2.$file_ending" $dest_dir
	# file copy -force "hdl/altera_up_ps2_command_out.$file_ending" $dest_dir
	# file copy -force "hdl/altera_up_ps2_data_in.$file_ending" $dest_dir
}
# | 
# +-----------------------------------

